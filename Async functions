Async:
 It allows you to write asynchronous code that looks synchronous, making it easier to work with promises.

Hereâ€™s a simple breakdown of how async functions work:

1 Async Functions: An async function always returns a promise. 
If the function returns  value, that value is resolved promise.
If the function throws an error, it returns a rejected promise.

2 Await Keyword: Inside an async function, you can use the await keyword to pause the execution of the function until a promise is resolved or rejected. 
This makes the code look synchronous, even though it is asynchronous.

// Define an async function
async function fetchData() {
  try {
    // Use 'await' to wait for the fetch request to complete
    let response = await fetch('https://jsonplaceholder.typicode.com/posts/1');
  
  } catch (error) {
    // If any promise is rejected, catch the error here
    console.error('Error:', error);
  }
}

fetchData();

  
 
asyncCall();
